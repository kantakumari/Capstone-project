pipeline {
    agent any
    tools {
       terraform 'terraform'
    }
    environment {
        RESOURCE_GROUP = 'rg-default'
        HOST_VM = 'web-linuxvm'
        USERNAME = 'azureuser'
    }
    stages {
        stage('Pull code from github') {
            steps {
                git credentialsId: 'git-token', url: 'git@github.com:kantakumari/Capstone-project.git'
            }
        }
        stage('terraform-init') {
            steps{
               script {
                    dir('infrastructure/') {
                        sh 'terraform init'
                    }
                }
            }            
        }
        stage('validating-syntax') {           
            steps{
               script {
                    dir('infrastructure/') {
                        sh 'terraform validate'
                    }
                }
            }
        }
        
        stage('terraform-plan') {
            steps{
               script {
                    dir('infrastructure/') {
                        sh 'terraform plan'
                    }
                }
            }            
        }
        stage('terraform-apply') {
            steps{
               script {
                    dir('infrastructure/') {
                        sh 'terraform apply --auto-approve'
                    }
                }
            }              
        }
        stage('SSH Connection to VM') {
            steps{
                sh'''
                PUBLIC_IP=$(az vm show -d -g $RESOURCE_GROUP -n $HOST_VM --query publicIps -o tsv)                
                ssh -tt -o "StrictHostKeyChecking no" $USERNAME@$PUBLIC_IP <<'EOT'
                echo "They are executed by: $( whoami )"
                exit              
                '''
            }
        }
        stage("Install Istio"){
            steps{
                sh ''' 
                PUBLIC_IP=$(az vm show -d -g $RESOURCE_GROUP -n $HOST_VM --query publicIps -o tsv)                   
                ssh -tt -o "StrictHostKeyChecking no" $USERNAME@$PUBLIC_IP <<'EOT'               
                curl -L https://istio.io/downloadIstio | sh -
                cd istio-1.16.1
                export PATH=$PWD/bin:$PATH
                sudo istioctl install --set profile=demo -y
                sudo kubectl label namespace default istio-injection=enabled
                exit
                '''
            }
        }
        stage('Installing Helm Chart') {
            steps{
                sh'''
                PUBLIC_IP=$(az vm show -d -g $RESOURCE_GROUP -n $HOST_VM --query publicIps -o tsv)                
                ssh -tt -o "StrictHostKeyChecking no" $USERNAME@$PUBLIC_IP <<'EOT'
                sudo helm repo add bitnami https://charts.bitnami.com/bitnami
                sudo helm install my-nginx-release bitnami/nginx
                sudo kubectl get pod -o jsonpath='{.items[0].metadata.name}'
                exit
                '''
            }
        }

        stage("terraform-destroy"){
            steps{
                sh 'terraform destroy -auto-approve'
            }
        }

    }

    
}